---
http_interactions:
- request:
    method: get
    uri: https://verifier.globalnames.org/api/v1/data_sources
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday/v2.14.0 Checkerberry/v0.0.1
      Accept:
      - application/json
      X-User-Agent:
      - Faraday/v2.14.0 Checkerberry/v0.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 22 Oct 2025 19:23:37 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      - Origin
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        [{"id":1,"uuid":"d4df2968-4257-4ad9-ab81-bedbbfb25e2a","title":"Catalogue of Life","titleShort":"Catalogue of Life","version":"2025-08-20","releaseDate":"2025-08-20","doi":"10.48580/dgsv8","description":"The Catalogue of Life is an assembly of expert-based global species checklists with the aim to build a comprehensive catalogue of all known species of organisms on Earth. \nContinuous progress is made towards completion, but for now, it probably includes just over 80% of the world’s known species. \nThe Catalogue of Life estimates 2.3M extant species on the planet recognised by taxonomists at present time. \nThis means that for many groups it continues to be deficient, and users may notice that many species are still missing from the Catalogue.\n\n### What's new in August 2025 edition?  \n\n#### 88 checklists have been updated:\n \n * 3i Auchenorrhyncha\n * Entiminae\n * FishBase via Aphia at VLIZ\n * GLI\n * ITIS\n * Pterophoroidea\n * Scarabs    \n * Sesiidae \n * SF Aphid\n * SF Chrysididae\n * SF Coreoidea\n * SF Dermaptera\n * SF Embioptera\n * SF Isoptera\n * SF Lygaeoidea\n * SF Mantodea     \n * SF Orthoptera\n * SF Phasmida\n * SF Plecoptera\n * SF Psocodea\n * WCO\n * WOL\n * WoRMS, 66 checklists\n         \n#### Other changes:\n\n * New version of the Arthropoda management classification, plus updates in the Coleoptera classification.","homeURL":"https://www.catalogueoflife.org/","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":5333582,"updatedAt":"2025-08-27"},{"id":2,"uuid":"68923690-0727-473c-b7c5-2ae9e601e3fd","title":"Wikispecies","titleShort":"Wikispecies","version":"2025-02-22","description":"The free species directory that anyone can edit.","homeURL":"https://species.wikimedia.org/wiki/Main_Page","isOutlinkReady":true,"curation":"Curated","hasTaxonData":false,"recordCount":797115,"updatedAt":"2025-05-23"},{"id":3,"uuid":"5d066e84-e512-4a2f-875c-0a605d3d9f35","title":"Integrated Taxonomic Information SystemITIS","titleShort":"ITIS","version":"2025-05-22","description":"The White House Subcommittee on Biodiversity and Ecosystem Dynamics has identified systematics as a research priority that is fundamental to ecosystem management and biodiversity conservation. This primary need identified by the Subcommittee requires improvements in the organization of, and access to, standardized nomenclature. ITIS (originally referred to as the Interagency Taxonomic Information System) was designed to fulfill these requirements. In the future, the ITIS will provide taxonomic data and a directory of taxonomic expertise that will support the system","homeURL":"https://www.itis.gov/","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":970312,"updatedAt":"2025-05-23"},{"id":4,"uuid":"97d7633b-5f79-4307-a397-3c29402d9311","title":"National Center for Biotechnology Information","titleShort":"NCBI","version":"2025-05-22","description":"The National Center for Biotechnology Information advances science and health by providing access to biomedical and genomic information.","homeURL":"https://www.ncbi.nlm.nih.gov/","isOutlinkReady":true,"curation":"NotCurated","hasTaxonData":false,"recordCount":2667559,"updatedAt":"2025-05-23"},{"id":5,"uuid":"af06816a-0b28-4a09-8219-bd1d63289858","title":"Index Fungorum: Species Fungorum","titleShort":"Index Fungorum","description":"The Index Fungorum, the global fungal nomenclator coordinated and supported by the Index Fungorum Partnership, contains names of fungi (including yeasts, lichens, chromistan fungal analogues, protozoan fungal analogues and fossil forms) at all ranks.\n\nAs a result of changes to the ICN (previously ICBN) relating to registration of names and following the lead taken by MycoBank, Index Fungorum now provides a mechanism to register names of new taxa, new names, new combinations and new typifications — no login is required. Names registered at Index Fungorum can be published immediately through the Index Fungorum e-Publication facility — an authorized login is required for this.\n\nSpecies Fungorum is currently an RBG Kew coordinated initiative to compile a global checklist of the fungi. You may search systematically defined and taxonomically complete datasets - global species databases - or the entire Species Fungorum. Species Fungorum contributes the fungal component to the Species 2000 project and, in partnership with ITIS, to the Catalogue of Life (currently used in the GBIF and EoL portal); for more information regarding these global initiative visit their websites. Please contact Paul Kirk if you you would like to contribute to Species Fungorum.","homeURL":"http://www.speciesfungorum.org","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":516042,"updatedAt":"2023-03-08"},{"id":6,"uuid":"a8259056-e178-4a35-a3e9-7c39969c2bd9","title":"USDA National Plant Germplasm System","titleShort":"GRIN Plant Taxonomy","version":"2025-05-21","description":"The USDA National Plant Germplasm System (NPGS), often referred to through its associated database, the Germplasm Resources Information Network (GRIN), is a vital resource for preserving and providing access to plant genetic diversity.\n\nThe Germplasm Resources Information Network (GRIN) provides information about the United States Department of Agriculture (USDA national collections of animal, microbial, and plant genetic resources (germplasm) important for food and agricultural production. GRIN documents these collections through informational pages, searchable databases, and links to USDA-ARS projects that curate the collections. ","homeURL":"https://npgsweb.ars-grin.gov/gringlobal/taxon/abouttaxonomy","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":140397,"updatedAt":"2025-05-22"},{"id":7,"title":"Union 4","titleShort":"Union 4","description":"This classification seeks to include all taxa and to access all names of clades including variant forms of names. It will include content developed as IRMNG, and a framework developed as CU*STAR for microscope.mbl.edu that was modified in eutree.lifedesks.org. It is a work in progress.","curation":"NotCurated","hasTaxonData":true,"recordCount":1251124,"updatedAt":"2012-08-21"},{"id":8,"uuid":"f8e586aa-876e-4b0a-ab89-da0b4a64c19a","title":"The Interim Register of Marine and Nonmarine Genera","titleShort":"IRMNG (old)","description":"The Interim Register of Marine and Nonmarine Genera is a provisional (or ‘interim’) compilation of genus names – including species names in many cases – and covers both living and extinct biota into a single system to support taxonomic and other queries dealing with e.g. homonyms, authorities, parent-child relationships, spelling variations and distinctions between marine and non-marine or fossil and recent taxa","homeURL":"https://irmng.org/","curation":"NotCurated","hasTaxonData":true,"recordCount":2392638,"updatedAt":"2016-10-21"},{"id":9,"uuid":"bf077d91-673a-4be4-8af9-76db45d07e98","title":"World Register of Marine Species","titleShort":"WoRMS","version":"2025-05-23","doi":"http://dx.doi.org/10.14284/170","description":"An authoritative classification and catalogue of marine names. To obtain a full copy, please go to https://www.marinespecies.org/usersrequest.php","homeURL":"https://marinespecies.org","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":1475577,"updatedAt":"2025-05-23"},{"id":10,"uuid":"bacd21f0-44e0-43e2-914c-70929916f257","title":"Freebase","titleShort":"Freebase","description":"An entity graph of people, places and things, built by a community that loves open data.","curation":"NotCurated","hasTaxonData":true,"recordCount":138803,"updatedAt":"2012-08-01"},{"id":11,"uuid":"eebb6f49-e1a1-4f42-b9d5-050844c893cd","title":"Global Biodiversity Information Facility Backbone Taxonomy","titleShort":"GBIF Backbone Taxonomy","description":"[\"The GBIF Backbone Taxonomy is a single, synthetic management classification with the goal of covering all names GBIF is dealing with.          It\u0026#39;s the taxonomic backbone that allows GBIF to integrate name based information from different resources, no matter if these are occurrence datasets, species pages, names from nomenclators or external sources like EOL, Genbank or IUCN. This backbone allows taxonomic search, browse and reporting operations across all those resources in a consistent way and to provide means to crosswalk names from one source to another.\", \"It is updated regulary through an automated process in which the Catalogue of Life acts as a starting point also providing the complete higher classification above families. Additional scientific names only found in other authoritative nomenclatural and taxonomic datasets are then merged into the tree, thus extending the original catalogue and broadening the backbones name coverage.          The GBIF Backbone taxonomy also includes identifiers for Operational Taxonomic Units (OTUs) drawn from the barcoding resources iBOL and UNITE.\", \"International Barcode of Life project (iBOL), Barcode Index Numbers (BINs).  BINs are connected to a taxon name and its classification by taking into account all names applied to the BIN and picking names with at least 80% consensus. If there is no consensus of name at the species level, the selection process is repeated moving up the major Linnaean ranks until consensus is achieved.\", \"UNITE - Unified system for the DNA based fungal species, Species Hypotheses (SHs).  SHs are connected to a taxon name and its classification based on the determination of the RefS (reference sequence) if present or the RepS (representative sequence). In the latter case, if there is no match in the UNITE taxonomy, the lowest rank with 100% consensus within the SH will be used.\", \"The GBIF Backbone Taxonomy is available for download at https://hosted-datasets.gbif.org/datasets/backbone/ in different formats together with an archive of all previous versions.\", \"The following 105 sources have been used to assemble the GBIF backbone with number of names given in brackets:\\n\u003cul\u003e\u003cli\u003eCatalogue of Life Checklist - 4766428 names\u003c/li\u003e\u003cli\u003eInternational Barcode of Life project (iBOL) Barcode Index Numbers (BINs) - 635951 names\u003c/li\u003e\u003cli\u003eUNITE - Unified system for the DNA based fungal species linked to the classification - 611208 names\u003c/li\u003e\u003cli\u003eThe Paleobiology Database - 212054 names\u003c/li\u003e\u003cli\u003eWorld Register of Marine Species - 188857 names\u003c/li\u003e\u003cli\u003eThe Interim Register of Marine and Nonmarine Genera - 183894 names\u003c/li\u003e\u003cli\u003eThe World Checklist of Vascular Plants (WCVP) - 131891 names\u003c/li\u003e\u003cli\u003eGBIF Backbone Taxonomy - 114350 names\u003c/li\u003e\u003cli\u003eTAXREF - 109374 names\u003c/li\u003e\u003cli\u003eThe Leipzig catalogue of vascular plants - 75380 names\u003c/li\u003e\u003cli\u003eZooBank - 73549 names\u003c/li\u003e\u003cli\u003eIntegrated Taxonomic Information System (ITIS) - 68377 names\u003c/li\u003e\u003cli\u003ePlazi.org taxonomic treatments database - 61346 names\u003c/li\u003e\u003cli\u003eGenome Taxonomy Database r207 - 60545 names\u003c/li\u003e\u003cli\u003eInternational Plant Names Index - 52329 names\u003c/li\u003e\u003cli\u003eFauna Europaea - 45077 names\u003c/li\u003e\u003cli\u003eThe National Checklist of Taiwan (Catalogue of Life in Taiwan, TaiCoL) - 36193 names\u003c/li\u003e\u003cli\u003eDyntaxa. Svensk taxonomisk databas - 35892 names\u003c/li\u003e\u003cli\u003eThe Plant List with literature - 32692 names\u003c/li\u003e\u003cli\u003eUnited Kingdom Species Inventory (UKSI) - 29643 names\u003c/li\u003e\u003cli\u003eArtsnavnebasen - 29208 names\u003c/li\u003e\u003cli\u003eThe IUCN Red List of Threatened Species - 21221 names\u003c/li\u003e\u003cli\u003eAfromoths, online database of Afrotropical moth species (Lepidoptera) - 13961 names\u003c/li\u003e\u003cli\u003eBrazilian Flora 2020 project - Projeto Flora do Brasil 2020 - 13829 names\u003c/li\u003e\u003cli\u003eProkaryotic Nomenclature Up-to-Date (PNU) - 10079 names\u003c/li\u003e\u003cli\u003eChecklist Dutch Species Register - Nederlands Soortenregister - 8814 names\u003c/li\u003e\u003cli\u003eICTV Master Species List (MSL) - 7852 names\u003c/li\u003e\u003cli\u003eCockroach Species File - 6020 names\u003c/li\u003e\u003cli\u003eGRIN Taxonomy - 5882 names\u003c/li\u003e\u003cli\u003eTaxon list of fungi and fungal-like organisms from Germany compiled by the DGfM - 4570 names\u003c/li\u003e\u003cli\u003eCatalogue of Afrotropical Bees - 3623 names\u003c/li\u003e\u003cli\u003eCatalogue of Tenebrionidae (Coleoptera) of North America - 3327 names\u003c/li\u003e\u003cli\u003eChecklist of Beetles (Coleoptera) of Canada and Alaska. Second Edition. - 3312 names\u003c/li\u003e\u003cli\u003eSystema Dipterorum - 2850 names\u003c/li\u003e\u003cli\u003eCatalogue of the Pterophoroidea of the World - 2807 names\u003c/li\u003e\u003cli\u003eThe Clements Checklist - 2675 names\u003c/li\u003e\u003cli\u003eTaxon list of Hymenoptera from Germany compiled in the context of the GBOL project - 2496 names\u003c/li\u003e\u003cli\u003eIOC World Bird List, v13.2 - 2366 names\u003c/li\u003e\u003cli\u003eOfficial Lists and Indexes of Names in Zoology - 2310 names\u003c/li\u003e\u003cli\u003eNational checklist of all species occurring in Denmark - 1922 names\u003c/li\u003e\u003cli\u003eMyriatrix - 1876 names\u003c/li\u003e\u003cli\u003eDatabase of Vascular Plants of Canada (VASCAN) - 1822 names\u003c/li\u003e\u003cli\u003eTaxon list of vascular plants from Bavaria, Germany compiled in the context of the BFL project - 1771 names\u003c/li\u003e\u003cli\u003eOrthoptera Species File - 1742 names\u003c/li\u003e\u003cli\u003eA list of the terrestrial fungi, flora and fauna of Madeira and Selvagens archipelagos - 1602 names\u003c/li\u003e\u003cli\u003eAphid Species File - 1565 names\u003c/li\u003e\u003cli\u003eWorld Spider Catalog - 1561 names\u003c/li\u003e\u003cli\u003eTaxon list of Jurassic Pisces of the Tethys Palaeo-Environment compiled at the SNSB-JME - 1270 names\u003c/li\u003e\u003cli\u003eBackbone Family Classification Patch - 1143 names\u003c/li\u003e\u003cli\u003eGBIF Algae Classification - 1100 names\u003c/li\u003e\u003cli\u003eInternational Cichorieae Network (ICN): Cichorieae Portal - 975 names\u003c/li\u003e\u003cli\u003ePsocodea Species File - 803 names\u003c/li\u003e\u003cli\u003eNew Zealand Marine Macroalgae Species Checklist - 787 names\u003c/li\u003e\u003cli\u003eAnnotated checklist of endemic species from the Western Balkans - 754 names\u003c/li\u003e\u003cli\u003eTaxon list of animals with German names (worldwide) compiled at the SMNS - 503 names\u003c/li\u003e\u003cli\u003eCatalogue of the Alucitoidea of the World - 472 names\u003c/li\u003e\u003cli\u003eLygaeoidea Species File - 462 names\u003c/li\u003e\u003cli\u003eCatálogo de Plantas y Líquenes de Colombia - 422 names\u003c/li\u003e\u003cli\u003eGBIF Backbone Patch - 317 names\u003c/li\u003e\u003cli\u003ePhasmida Species File - 259 names\u003c/li\u003e\u003cli\u003eCortinariaceae fetched from the Index Fungorum API - 234 names\u003c/li\u003e\u003cli\u003eCoreoidea Species File - 233 names\u003c/li\u003e\u003cli\u003eGTDB supplement - 139 names\u003c/li\u003e\u003cli\u003eMantodea Species File - 119 names\u003c/li\u003e\u003cli\u003eEndemic species in Taiwan - 93 names\u003c/li\u003e\u003cli\u003eTaxon list of Araneae from Germany compiled in the context of the GBOL project - 88 names\u003c/li\u003e\u003cli\u003eSpecies of Hominidae - 78 names\u003c/li\u003e\u003cli\u003eTaxon list of Sternorrhyncha from Germany compiled in the context of the GBOL project - 77 names\u003c/li\u003e\u003cli\u003eTaxon list of mosses from Germany compiled in the context of the GBOL project - 75 names\u003c/li\u003e\u003cli\u003eMammal Species of the World - 73 names\u003c/li\u003e\u003cli\u003ePlecoptera Species File - 71 names\u003c/li\u003e\u003cli\u003eSpecies Fungorum Plus - 64 names\u003c/li\u003e\u003cli\u003eCatalogue of the type specimens of Cosmopterigidae (Lepidoptera: Gelechioidea) from research collections of the Zoological Institute, Russian Academy of Sciences - 47 names\u003c/li\u003e\u003cli\u003eSpecies named after famous people - 41 names\u003c/li\u003e\u003cli\u003eDermaptera Species File - 36 names\u003c/li\u003e\u003cli\u003eTaxon list of Trichoptera from Germany compiled in the context of the GBOL project - 34 names\u003c/li\u003e\u003cli\u003eTrue Fruit Flies (Diptera, Tephritidae) of the Afrotropical Region - 33 names\u003c/li\u003e\u003cli\u003eRange and Regularities in the Distribution of Earthworms of the Earthworms of the USSR Fauna. Perel, 1979 - 32 names\u003c/li\u003e\u003cli\u003eTaxon list of Diplura from Germany compiled in the context of the GBOL project - 30 names\u003c/li\u003e\u003cli\u003eLista de referencia de especies de aves de Colombia - 2022 - 24 names\u003c/li\u003e\u003cli\u003eTaxon list of Auchenorrhyncha from Germany compiled in the context of the GBOL project - 20 names\u003c/li\u003e\u003cli\u003eCatalogue of the type specimens of Polycestinae (Coleoptera: Buprestidae) from research collections of the Zoological Institute, Russian Academy of Sciences - 19 names\u003c/li\u003e\u003cli\u003eTaxon list of Thysanoptera from Germany compiled in the context of the GBOL project - 19 names\u003c/li\u003e\u003cli\u003eLista de especies de vertebrados registrados en jurisdicción del Departamento del Huila - 18 names\u003c/li\u003e\u003cli\u003eTaxon list of Microcoryphia (Archaeognatha) from Germany compiled in the context of the GBOL project - 15 names\u003c/li\u003e\u003cli\u003eCatalogue of the type specimens of Bufonidae and Megophryidae (Amphibia: Anura) from research collections of the Zoological Institute, Russian Academy of Sciences - 12 names\u003c/li\u003e\u003cli\u003eGrylloblattodea Species File - 11 names\u003c/li\u003e\u003cli\u003eColeorrhyncha Species File - 9 names\u003c/li\u003e\u003cli\u003eTaxon list of liverworts from Germany compiled in the context of the GBOL project - 9 names\u003c/li\u003e\u003cli\u003eEmbioptera Species File - 7 names\u003c/li\u003e\u003cli\u003eTaxon list of Pisces and Cyclostoma from Germany compiled in the context of the GBOL project - 6 names\u003c/li\u003e\u003cli\u003eTaxon list of Pteridophyta from Germany compiled in the context of the GBOL project - 6 names\u003c/li\u003e\u003cli\u003eTaxon list of Siphonaptera from Germany compiled in the context of the GBOL project - 5 names\u003c/li\u003e\u003cli\u003eThe Earthworms of the Fauna of Russia. Perel, 1997 - 5 names\u003c/li\u003e\u003cli\u003eTaxon list of Zygentoma from Germany compiled in the context of the GBOL project - 4 names\u003c/li\u003e\u003cli\u003eAsiloid Flies: new taxa of Diptera: Apioceridae, Asilidae, and Mydidae - 3 names\u003c/li\u003e\u003cli\u003eTaxon list of Protura from Germany compiled in the context of the GBOL project - 3 names\u003c/li\u003e\u003cli\u003eTaxon list of hornworts from Germany compiled in the context of the GBOL project - 2 names\u003c/li\u003e\u003cli\u003eChrysididae Species File - 1 names\u003c/li\u003e\u003cli\u003eTaxon list of Dermaptera from Germany compiled in the context of the GBOL project - 1 names\u003c/li\u003e\u003cli\u003eTaxon list of Diplopoda from Germany in the context of the GBOL project - 1 names\u003c/li\u003e\u003cli\u003eTaxon list of Orthoptera (Grashoppers) from Germany compiled at the SNSB - 1 names\u003c/li\u003e\u003cli\u003eTaxon list of Pscoptera from Germany compiled in the context of the GBOL project - 1 names\u003c/li\u003e\u003cli\u003eTaxon list of Pseudoscorpiones from Germany compiled in the context of the GBOL project - 1 names\u003c/li\u003e\u003cli\u003eTaxon list of Raphidioptera from Germany compiled in the context of the GBOL project - 1 names\u003c/li\u003e\u003c/ul\u003e\"]","homeURL":"https://www.gbif.org/dataset/d7dddbf4-2cf0-4f39-9b2a-bb099caae36c","isOutlinkReady":true,"curation":"AutoCurated","hasTaxonData":true,"recordCount":7746724,"updatedAt":"2024-01-11"},{"id":12,"uuid":"dba5f880-a40d-479b-a1ad-a646835edde4","title":"Encyclopedia of Life","titleShort":"EOL","version":"2025-01-30","description":"Global access to knowledge about life on Earth","homeURL":"https://eol.org","isOutlinkReady":true,"curation":"AutoCurated","hasTaxonData":false,"recordCount":8537724,"updatedAt":"2025-02-04"},{"id":93,"title":"Passiflora vernacular names","titleShort":"Passiflora vernacular names","description":"Passiflora vernacular names","curation":"NotCurated","hasTaxonData":false,"recordCount":7,"updatedAt":"2012-02-09"},{"id":94,"title":"Inventory of Fish Species in the Wami River Basin","titleShort":"Inventory of Fish Species in the Wami Riv...","description":"Inventory of fish fauna for use in assessing the environmental flow of the Wami River Sub-Basin i.e. how much water is needed for human uses and sustaining ecological integrity of the river?","curation":"NotCurated","hasTaxonData":false,"recordCount":35,"updatedAt":"2012-02-09"},{"id":95,"title":"Pheasant Diversity and Conservation in the Mt. Gaoligonshan Region","titleShort":"Pheasant Diversity and Conservation in th...","description":"A jouranal article that describes about the status of Phaesant species diversity in the Mt. Gaologongshan region in Yunnan, P. R. China","curation":"NotCurated","hasTaxonData":false,"recordCount":21,"updatedAt":"2012-02-09"},{"id":96,"title":"Finding Species","titleShort":"Finding Species","description":"Uses compelling and original professional-grade photographic images, technology, and on-the-ground field experience to “give a face to biodiversity,” promoting the conservation of threatened species and habitats.","curation":"NotCurated","hasTaxonData":false,"recordCount":130,"updatedAt":"2012-02-09"},{"id":97,"title":"Birds of Lindi Forests Plantation","titleShort":"Birds of Lindi Forests Plantation","description":"The survey was conducted around Lindi Forests plantation mainly to identify birds of the area fo better management and conservation of the forest.","curation":"NotCurated","hasTaxonData":false,"recordCount":48,"updatedAt":"2012-02-09"},{"id":98,"title":"Nemertea","titleShort":"Nemertea","description":"{}","curation":"NotCurated","hasTaxonData":false,"recordCount":147,"updatedAt":"2012-02-09"},{"id":99,"title":"Kihansi Gorge Amphibian Species Checklist","titleShort":"Kihansi Gorge Amphibian Species Checklist","description":"This is a checklist of Amphibian Species in the Kihansi Gorge in the Udzungwa Tanzania. It is an important information on Biodiversity status of the Udzungwa Mountains as a Mega Biodiverse Hotspot of the Eastern Arc Mountains. It contains endemic and species with the risk of extinction (endangered, critically endangered, extinct in the wild). The studies on amphibian species commenced with the discovery of the Kihansi Spray Toad (KST) (Nectophrynoides asperginis) in December 1996 and its description in 1998 (Poynton et al., 1998). To date several species of amphibians in the Order Anura in Five different Families have been identified to exist in the Kihansi Gorge. Unfortunately Nectophrynoides asperginis went extinct in the wild mainly due to habitat alteration by the Kihansi River water abstraction where water is used for Hydro power project. Further studies are underway to establish the exact cause of the population crash of KST in the Kihansi Gorge as one of the effort to bring back the KST population in the  wild. These include the studies on Chytrid fungus, sediments flush from the reservoir,agricultural pesticide residue and water quality changes. Thanks to the Captive breeding programs that the species is under control for reintroduction back to its original habitat. This description therefore intends to report the amphibians occurring in the Kihansi Gorge i.e. amphibians occurring in the Spray Wetlands, at the edges of the spray wetlands as well as those appearing in other areas of the gorge. These are important for testing different scientific scenarios related to KSTs disappearance in the Kihansi Gorge since 2003.","curation":"NotCurated","hasTaxonData":false,"recordCount":12,"updatedAt":"2012-02-09"},{"id":100,"title":"Mushroom Observer","titleShort":"Mushroom Observer","description":"Purpose: record observations about mushrooms, help people identify mushrooms they aren’t familiar with, and expand the community around the scientific exploration of mushrooms (mycology)","curation":"NotCurated","hasTaxonData":false,"recordCount":177,"updatedAt":"2012-02-09"},{"id":101,"title":"TaxonConcept","titleShort":"TaxonConcept","description":"TaxonConcept provides human and machine readable species description documents that help describe the attributes and variation within a species. These documents stabilize the \"meaning\" of these species identifiers to improve large scale data integration.","curation":"NotCurated","hasTaxonData":false,"recordCount":248,"updatedAt":"2012-02-09"},{"id":102,"title":"Amphibia and Reptilia of Yunnan","titleShort":"Amphibia and Reptilia of Yunnan","description":"A book edited by Yang Datong (Chief editor) and Rao Dingqi (Deputy editor), and published by Yunnan Publishing Group Corporation, Yunnan Science and Technology Press, Kunming, 2008.\n\nIn this book, 115 speies of amphibinas and 162 species of reptiles are described. Among them are seven new species of Frog. All of the species described in the book are based on over 20,000 specimens that occurs in Yunnan, described by staff of herbpetology section of Kunming Institue of Zoology. The book lists amphibian and reptile species from 6 natural geographial regions and 12 natural reservs of Yunnan. \n\nPreface to the book is in English. Also includes 240 colour photographs.","curation":"NotCurated","hasTaxonData":false,"recordCount":286,"updatedAt":"2012-02-09"},{"id":103,"title":"Common names of Chilean Plants","titleShort":"Common names of Chilean Plants","description":"Common names of Chilean Plants www.florachilena.cl","curation":"NotCurated","hasTaxonData":false,"recordCount":249,"updatedAt":"2012-02-09"},{"id":104,"title":"Invasive Species of Belgium","titleShort":"Invasive Species of Belgium","description":"The Belgian Forum on Invasive Species (BFIS) is an informal structure animated by the Belgian Biodiversity Platform where in scientists interested in biological invasions are involved.","curation":"NotCurated","hasTaxonData":false,"recordCount":100,"updatedAt":"2012-02-09"},{"id":105,"title":"ZooKeys","titleShort":"ZooKeys","description":"ZooKeys is a peer-reviewed, open-access, rapidly produced journal launched to support free exchange of ideas and information in systematic zoology.","curation":"Curated","hasTaxonData":false,"recordCount":466,"updatedAt":"2012-02-09"},{"id":106,"title":"COA Wildlife Conservation List","titleShort":"COA Wildlife Conservation List","description":"Taiwan's unique geographical location and varied topography resulted in diverse fauna on this beautiful island. However, excessive land development and resource utilization have incessantly squeezed the space for the survival of wildlife. Wildlife conservation is not just a simple act of protection, it warrants reasonable and sustainable use of natural resources.\n\nThe Wildlife Conservation Act, enacted by Council of Agriculture, Executive Yuan, is an important legal basis for wildlife management and habitat protection. Its purpose is to maintain species diversity and ecological balance. The government and related conservation organizations have designated 17 wildlife refuges. Not only are they the subject of academic researches, they are also the indicators of environmental quality. The checklist of Taiwan (TaiBNET) lists 238 endangered, rare, and other protected species of wildlife in Taiwan. The database also provides information on these species, such as their scientific names (including authors and years), common names, and synonyms. Through Taiwan Biodiversity Information Facility (TaiBIF), the information can be shared and exchanged with other GBIF participants. Users can use keywords to link to other websites with relevant information. All these efforts will result in the circulation of information in the fields of research, education and conservation, which in turn will arouse global attention to the protection of wildlife.","curation":"NotCurated","hasTaxonData":false,"recordCount":232,"updatedAt":"2012-02-09"},{"id":107,"title":"AskNature","titleShort":"AskNature","description":"AskNature's goal is to connect innovative minds with life's best ideas, and in the process, inspire technologies that create conditions conducive to life.","curation":"NotCurated","hasTaxonData":false,"recordCount":795,"updatedAt":"2012-02-09"},{"id":108,"title":"China: Yunnan, Southern Gaoligongshan, Rapid Biological Inventories Report No. 04","titleShort":"China: Yunnan, Southern Gaoligongshan, Ra...","description":"Rapid biological inventories are meant to catalyze effective action for conservation in threatened regions of high biological diversity and uniqueness. The book summarises the result of rapid biological and social inventories carried out by team of scientists in the Southern GaoligongShan of Yunnan in China. The biological inventories do not attempt to produce an exhaustive list of species or higher taxa. Rather, the rapid surveys (1) identify the important biological communities in the site or region of interest and (2) determine whether these communities are of outstanding quality and significance in a regional\nor global context. During rapid social asset inventories, scientists and local communities collaborate to identify patterns of social organization and opportunities for capacity building.","curation":"NotCurated","hasTaxonData":false,"recordCount":661,"updatedAt":"2012-02-09"},{"id":109,"title":"Native Orchids from Gaoligongshan Mountains, China","titleShort":"Native Orchids from Gaoligongshan Mountai...","description":"Describes about 352 species of Orchids from the Gaoligong Mountain in Yunnan, P.R China, also provides coloured photographs and brief description.","curation":"NotCurated","hasTaxonData":false,"recordCount":346,"updatedAt":"2012-02-09"},{"id":110,"title":"Illinois Wildflowers","titleShort":"Illinois Wildflowers","description":"Contains descriptions, photographs, and range maps of many wildflowers in Illinois.","curation":"NotCurated","hasTaxonData":false,"recordCount":801,"updatedAt":"2012-02-09"},{"id":112,"title":"Coleorrhyncha Species File","titleShort":"Coleorrhyncha Species File","description":"This file contains taxon names and related nomenclatural information for the suborder Coleorrhyncha originating from the Coleorrhyncha Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","curation":"NotCurated","hasTaxonData":true,"recordCount":166,"updatedAt":"2012-02-09"},{"id":113,"title":"Zoological names","titleShort":"Zoological names","curation":"NotCurated","hasTaxonData":false,"recordCount":1037,"updatedAt":"2012-02-09"},{"id":114,"title":"Peces de la zona hidrogeográfica de la Amazonia, Colombia (Spreadsheet)","titleShort":"Peces de la zona hidrogeográfica de la A...","description":"Se registra un total de 753 especies para la zona hidrogeográfica del Amazonas, agrupadas en 14 órdenes y 47 familias. Los órdenes con mayor representación específica fueron: Characiformes (367 spp.), Siluriformes (228 spp.) y Perciformes (87 spp.). Los 11 órdenes restantes presentaron de 34 a una sola especie. La familia con la mayor riqueza fue Characidae (208 spp.) que representa el 27,6% del total de las especies.","curation":"NotCurated","hasTaxonData":false,"recordCount":1105,"updatedAt":"2012-02-09"},{"id":115,"title":"Eastern Mediterranean Syllidae","titleShort":"Eastern Mediterranean Syllidae","description":"Occurence records of Syllidae (Annelida:Polychaeta) from three locations in the Eastern Mediterranean Sea (Crete (Greece) and Israel).","curation":"NotCurated","hasTaxonData":false,"recordCount":1123,"updatedAt":"2012-02-09"},{"id":116,"title":"Gaoligong Shan Medicinal Plants Checklist","titleShort":"Gaoligong Shan Medicinal Plants Checklist","description":"The book is the fifth volume of the Gaoligong Shan Research Series. The Editors are Qian Zigang and Li Anhua, and is published by Science Press,China, published in 2008.","curation":"NotCurated","hasTaxonData":false,"recordCount":1299,"updatedAt":"2012-02-09"},{"id":117,"title":"Birds of Tansania","titleShort":"Birds of Tansania","description":"Tanzania has the richest bird life which now stands at 1,148 known species. However, this information is currently not freely available for public use. A checklist presented here is the first reading online for anyone interested in understanding of the birds of Tanzania. The nomenclature is based on Britton, P.E. (Ed.) (1980) Birds of East Africa (EANHS) with update versions provided in Tanzania Bird Atlas. Endemic species are marked by a letter E. Although this list is subject to changes due to usual taxonomic revisions and/or new records provided it is a useful guidance especially to those without access to recent literature. Kiswahili names are from Mlingwa, C.O.F. (2000) Checklist of Kiswahili names of the Birds of Tanzania, Wildlife Conservation Society of Tanzania. \nWe are privileged to have the opportunity to compile the checklist for Tanzania Biodiversity Information Facility (TanBIF) under COSTECH. We commend this initiative meant to reach a wider audience.","curation":"NotCurated","hasTaxonData":false,"recordCount":1148,"updatedAt":"2012-02-09"},{"id":118,"title":"AmphibiaWeb","titleShort":"AmphibiaWeb","description":"AmphibiaWeb is an online system that provides access to information on amphibian declines, conservation, natural history, and taxonomy.","curation":"NotCurated","hasTaxonData":false,"recordCount":1829,"updatedAt":"2012-02-09"},{"id":119,"title":"Tansania Plant Specimens","titleShort":"Tansania Plant Specimens","description":"Plants are a vital part of the world’s biodiversity, yet they are endangered by a combination of factors: over-exploitation, agricultural activities and forestry practices, urbanization, land use changes and spread of invasive species. Therefore, the need for data basing and digitizing the rich flora of Tanzania is equally important in order to catch up with an alarming rate of natural habitats degradation. Also The   available data is not easily accessible to the public and other institutions for use.","curation":"NotCurated","hasTaxonData":false,"recordCount":3173,"updatedAt":"2012-02-09"},{"id":120,"title":"Papahanaumokuakea Marine National Monument","titleShort":"Papahanaumokuakea Marine National Monument","description":"PMNM initial species list test data.","curation":"NotCurated","hasTaxonData":false,"recordCount":3609,"updatedAt":"2012-02-09"},{"id":121,"title":"Taiwanese IUCN species list","titleShort":"Taiwanese IUCN species list","description":"The Red List of Threatened Species, published by International Union for Conservation of Nature (IUCN), lists the conservation status of a representative selection of plant and animal species according to the level of threat to their survival. A species may have a limited distribution or be found only in a small area in a country. From the point of view of biodiversity, however, the extinction of any species can prompt a global impact. Therefore, the related information of an endangered species should be recognized and its conservation effort be executed.\n\nIUCN estimates that there are 20,000 endangered species. The checklist of Taiwan (TaiBNET) lists 127 species as vulnerable (VU) or higher levels. The scientific name (including author and year), common names, synonyms, assessment level, and other information of these species are also included in the database. Taiwan, even the whole world, needs to actively promote the conservation work of these species. Through Taiwan Biodiversity Information Facility (TaiBIF), the information of Taiwan’s endangered species can be shared and exchanged with other GBIF participants. Users can use keywords to link to other websites with relevant information. All these efforts are to draw the world's attention to the conservation issue of endangered animals and plants.","curation":"NotCurated","hasTaxonData":false,"recordCount":587,"updatedAt":"2012-02-09"},{"id":122,"title":"BioPedia","titleShort":"BioPedia","description":"Bio*pedia is a communal repository of descriptions of organisms. Bio*pedia works in conjunction with the STAR biodiversity web sites, such as micro*scope, and with the Encyclopedia of Life.","curation":"NotCurated","hasTaxonData":false,"recordCount":4841,"updatedAt":"2012-02-09"},{"id":123,"title":"AnAge","titleShort":"AnAge","description":"AnAge is a database of longevity and ageing in animals. It features quantitative life history data for over 4,000 species, including extensive longevity records, body masses at different developmental stages, reproductive data, and physiological traits re","curation":"NotCurated","hasTaxonData":false,"recordCount":3467,"updatedAt":"2012-02-09"},{"id":124,"title":"Embioptera Species File","titleShort":"Embioptera Species File","description":"This file contains taxon names and related nomenclatural information for the order Embioptera originating from the Embioptera Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","curation":"NotCurated","hasTaxonData":true,"recordCount":587,"updatedAt":"2012-02-09"},{"id":125,"title":"Global Invasive Species Database","titleShort":"Global Invasive Species Database","description":"The Global Invasive Species Database is a free, online searchable source of information about species that negatively impact biodiversity. The GISD aims to increase public awareness about invasive species and to facilitate effective prevention and management activities by disseminating specialist’s knowledge and experience to a broad global audience. It focuses on invasive alien species that threaten native biodiversity and covers all taxonomic groups from micro-organisms to animals and plants.","curation":"NotCurated","hasTaxonData":false,"recordCount":833,"updatedAt":"2012-02-09"},{"id":126,"title":"Sendoya S., Fernández F. AAT de hormigas (Hymenoptera: Formicidae) del Neotrópico 1.0 2004 (Spreadsheet)","titleShort":"Sendoya S., Fernández F. AAT de hormigas...","description":"Se presenta una lista sinonímica de las subfamilias, tribus, géneros y de las especies de hormigas presentes en todo el neotrópico, considerando las regiones incluidas desde el sur de los Estados Unidos hasta Argentina, (incluyendo el caribe). La mayoria de los registros anteriores a 1995 están basados en el catálogo Bolton (1995), por lo que se recomienda su consulta para información más detallada.","curation":"NotCurated","hasTaxonData":true,"recordCount":4315,"updatedAt":"2012-02-09"},{"id":127,"title":"Flora of Gaoligong Mountains","titleShort":"Flora of Gaoligong Mountains","description":"The Book covers all the seed plants found in the Gaoligong Mountains, including 2 phyla, 210 families, 1086 genera and 4303 species and varieties. Each species is listed with scientific name, distribution, collection number, life form, habitat, altitude, economic uses and scientific value.","curation":"NotCurated","hasTaxonData":false,"recordCount":4284,"updatedAt":"2012-02-09"},{"id":128,"title":"ARKive","titleShort":"ARKive","description":"ARKive is a Wildscreen initiative – a non-profit charitable organization dedicated to promoting the public understanding of biodiversity and the need for its conservation.","curation":"NotCurated","hasTaxonData":false,"recordCount":2693,"updatedAt":"2012-02-09"},{"id":129,"title":"True Fruit Flies (Diptera, Tephritidae) of the Afrotropical Region","titleShort":"True Fruit Flies (Diptera, Tephritidae) o...","description":"This checklist covers all relevant information of the major dacine fruit fly genera of Africa.\nInitially established under the ENBI project, it provides a list current taxonomic status of species involved, as well as synonymy.\nLimitations of scope: the pilot study is focusing on a group of Afrotropical fruit flies only. Reason is that, over the last decade years several projects have focused on this group (cf. above) and that a mass of specimen related data are available. Afrotropical is used here in the biogeographical sense, hence the region below of the Sahara dessert. However, some additional records from northern Africa and the Middle East are included but not as exhaustive as those for the true Afrotropical region.","curation":"NotCurated","hasTaxonData":true,"recordCount":495,"updatedAt":"2012-02-09"},{"id":130,"title":"3i - Typhlocybinae Database","titleShort":"3i - Typhlocybinae Database","description":"3I (Internet-accessible Interactive Identification) is a set of software tools for creating on-line identification keys, taxonomic databases, and virtual taxonomic revisions.","curation":"NotCurated","hasTaxonData":false,"recordCount":11199,"updatedAt":"2012-02-09"},{"id":131,"title":"CATE Sphingidae","titleShort":"CATE Sphingidae","description":"An open-access taxonomic web-revision of the Sphingidae (Hawkmoths)","curation":"NotCurated","hasTaxonData":true,"recordCount":5222,"updatedAt":"2012-02-09"},{"id":132,"title":"ZooBank","titleShort":"ZooBank","description":"ZooBank Registered Names.","curation":"Curated","hasTaxonData":false,"recordCount":5499,"updatedAt":"2012-02-09"},{"id":133,"title":"Diatoms","titleShort":"Diatoms","description":"Kociolek, P., P. Hargraves, D. Williams, M. Sullivan, A. Witkowski, E. Theriot, M. Ashworth, A. Thessen and D. Patterson. 2010. The Diatoms Classification. http://diatoms.lifedesks.org..\nThis is a global, consensus-based classification for diatoms first","curation":"NotCurated","hasTaxonData":false,"recordCount":13058,"updatedAt":"2012-02-09"},{"id":134,"title":"AntWeb","titleShort":"AntWeb","description":"AntWeb is generally recognized as the most advanced biodiversity information system at species level dedicated to ants.","curation":"NotCurated","hasTaxonData":false,"recordCount":14240,"updatedAt":"2012-02-09"},{"id":135,"title":"Endemic species in Taiwan","titleShort":"Endemic species in Taiwan","description":"Taiwan is a continental island, located between the southeastern coastline of mainland China and Japan's Ryukyu Islands. With diverse terrain and wide range of vertical elevations, Taiwan has tropical, subtropical, temperate, and frigid climate zones. These unique geographical conditions, coupled with the effect of habitat isolation, gave Taiwan its high biodiversity.\n\nThe endemic species of Taiwan denotes the native plants and animals of Taiwan and its offshore islands such as Penghu Archipelago, Orchid Island, Green Island, etc. Even though the areas are small, the Checklist of Taiwan (TaiBNET) lists around 50,000 valid species scientific names. Among them, 8,000 are endemic species (including endemic subspecies and varietas), showing the abundance of Taiwan’s endemic Species. TaiBNET also provides information on these species, such as their scientific names (including authors and years), common names, and synonyms. Through Taiwan Biodiversity Information Facility (TaiBIF), the information on these endemic species are published and then shared and exchanged with other GBIF participants. Users can use keywords to link to other websites with relevant information. All these efforts will result in the circulation and utilization of information in the areas of research, education and conservation.","curation":"NotCurated","hasTaxonData":false,"recordCount":8174,"updatedAt":"2012-02-09"},{"id":136,"title":"Dermaptera Species File","titleShort":"Dermaptera Species File","description":"This file contains taxon names and related nomenclatural information for the order Dermaptera originating from the Dermaptera Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","curation":"NotCurated","hasTaxonData":true,"recordCount":2918,"updatedAt":"2012-02-09"},{"id":137,"title":"Mantodea Species File","titleShort":"Mantodea Species File","description":"This file contains taxon names and related nomenclatural information for the order Mantodea originating from the Mantodea Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","curation":"NotCurated","hasTaxonData":true,"recordCount":3911,"updatedAt":"2012-02-09"},{"id":138,"title":"Birds of the World: Recommended English Names","titleShort":"Birds of the World: Recommended English N...","description":"This initiative provides a set of unique English-language names for the extant species of the birds of the world. The names are based on a consensus of leading ornithologists worldwide and conform to standard rules of construction.\u003cbr/\u003e\u003cbr/\u003eThe English names recommended here are:\u003cbr/\u003e\u003cbr/\u003ebased on explicit guidelines and spelling rules\u003cbr/\u003eselected to involve minimal use of hyphens for group names\u003cbr/\u003eanglicized without glottal stops, accents, and the like\u003cbr/\u003ebased on interregional agreement and global consensus, with compromises\u003cbr/\u003eselected with deference to long-established names\u003cbr/\u003ealigned with current species taxonomy\u003cbr/\u003eavailable for general adoption\u003cbr/\u003esponsored and endorsed by the IOC and by committee members\u003cbr/\u003eThis was a volunteer, community effort on behalf of the International Ornithological Congress (IOC).\u003cbr/\u003e\u003cbr/\u003eCommissioned in 1991, the project took 15 years to complete. All participants gave freely and generously of their valuable time and resources. We waived royalty rights and subsidized the publication of the work to maximize its quality and affordability.\u003cbr/\u003e\u003cbr/\u003eWide dissemination, use, and improvement of the recommended International English names are our only goals. Gratis license to use this list in derivative works can be obtained by writing Frank Gill, P.O. Box 428 , Rushland PA 18956.\u003cbr/\u003e\u003cbr/\u003eIn the spirit of realized humility, we dedicate this work to Burt L. Monroe Jr. We just finished the first phase of what he started.\u003cbr/\u003e\u003cbr/\u003eFrank Gill and Minturn Wright \u003cbr/\u003eCo-chairs, IOC Standing Committee on English Names  \u003cbr/\u003eApril 2007","curation":"NotCurated","hasTaxonData":false,"recordCount":12974,"updatedAt":"2012-02-09"},{"id":139,"title":"New Zealand Animalia","titleShort":"New Zealand Animalia","description":"{}","curation":"NotCurated","hasTaxonData":false,"recordCount":34004,"updatedAt":"2012-02-09"},{"id":140,"title":"Blattodea Species File","titleShort":"Blattodea Species File","description":"This file contains taxon names and related nomenclatural information for the order Blattodea originating from the Blattodea Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","curation":"NotCurated","hasTaxonData":true,"recordCount":6660,"updatedAt":"2012-02-09"},{"id":141,"title":"Plecoptera Species File","titleShort":"Plecoptera Species File","description":"This file contains taxon names and related nomenclatural information for the order Plecoptera originating from the Plecoptera Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","curation":"NotCurated","hasTaxonData":true,"recordCount":5071,"updatedAt":"2012-02-09"},{"id":143,"title":"Coreoidea Species File","titleShort":"Coreoidea Species File","description":"This file contains taxon names and related nomenclatural information for the superfamily Coreoidea originating from the Coreoidea Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","curation":"NotCurated","hasTaxonData":true,"recordCount":4375,"updatedAt":"2012-02-09"},{"id":144,"title":"Freshwater Animal Diversity Assessment - Normalized export","titleShort":"Freshwater Animal Diversity Assessment - ...","description":"The Freshwater Animal Diversity Assessment (FADA) database contains authoritative species lists for several taxonomic groups and distribution data at the level of faunistic regions. The groups currently published (27-05-2011) include Halacaridae, Cnidaria-Hydroida, Cladocera, Copepoda, Mysidaceae, Ephemeroptera, Plecoptera, Macrophytes, Bivalvia, Nematomorpha, Rotifera, Fish and Mammals","curation":"NotCurated","hasTaxonData":true,"recordCount":37608,"updatedAt":"2012-02-09"},{"id":145,"title":"Catalogue of Vascular Plant Species of Central and Northeastern Brazil","titleShort":"Catalogue of Vascular Plant Species of Ce...","description":"NY Botanical Garden's International Plant Science Center is one of the few institutions worldwide with the resources, collections, and expertise to develop the information needed to understand and manage plant diversity","curation":"NotCurated","hasTaxonData":false,"recordCount":98719,"updatedAt":"2012-02-09"},{"id":146,"title":"Wikipedia in EOL","titleShort":"Wikipedia in EOL","description":"The free encyclopedia.","curation":"NotCurated","hasTaxonData":false,"recordCount":39051,"updatedAt":"2012-02-09"},{"id":147,"uuid":"ddb164f4-045c-4b0c-b2b5-7772b12dcfe1","title":"Database of Vascular Plants of Canada (VASCAN)","titleShort":"VASCAN","version":"2025-08-25","description":"The Database of Vascular Plants of Canada or VASCAN (http://data.canadensys.net/vascan) is a comprehensive and curated checklist of all vascular plants reported in Canada, Greenland (Denmark), and Saint Pierre and Miquelon (France). VASCAN was developed at the Université de Montréal Biodiversity Centre and is maintained by a group of editors and contributors. For every core taxon in the checklist (species, subspecies, or variety), VASCAN provides the accepted scientific name, the accepted French and English vernacular names, and their synonyms/alternatives in Canada, as well as the distribution status (native, introduced, ephemeral, excluded, extirpated, doubtful or absent) of the plant for each province or territory, and the habit (tree, shrub, herb and/or vine) of the plant in Canada. For reported hybrids (nothotaxa or hybrid formulas) VASCAN also provides the hybrid parents, except if the parents of the hybrid do not occur in Canada. All taxa are linked to a classification. VASCAN refers to a source for all name, classification and distribution information.\n\nAll data have been released to the public domain under a CC0 waiver and are available through Canadensys and the Global Biodiversity Information Facility (GBIF). VASCAN is a service to the scientific community and the general public, including administrations, companies, and non-governmental organizations.","curation":"NotCurated","hasTaxonData":true,"recordCount":33297,"updatedAt":"2025-08-27"},{"id":148,"title":"Phasmida Species File","titleShort":"Phasmida Species File","description":"This file contains taxon names and related nomenclatural information for the order Phasmida originating from the Phasmida Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","curation":"NotCurated","hasTaxonData":true,"recordCount":4610,"updatedAt":"2012-02-09"},{"id":149,"title":"Ocean Biodiversity Information System","titleShort":"OBIS","description":"OBIS was established by the Census of Marine Life program (www.coml.org). It is an evolving strategic alliance of people and organizations sharing a vision to make marine biogeographic data, from all over the world, available over the World Wide Web.","curation":"NotCurated","hasTaxonData":false,"recordCount":65535,"updatedAt":"2012-02-09"},{"id":150,"title":"USDA NRCS PLANTS Database","titleShort":"USDA NRCS PLANTS Database","description":"The PLANTS Database provides standardized information about the vascular plants, mosses, liverworts, hornworts, and lichens of the U.S. and its territories.","curation":"NotCurated","hasTaxonData":false,"recordCount":67374,"updatedAt":"2012-02-09"},{"id":151,"title":"Catalog of Fishes","titleShort":"Catalog of Fishes","description":"The Catalog of Fishes is a comprehensive compilation of the scientific names for fishes, edited William N. Eschmeyer.","curation":"Curated","hasTaxonData":false,"recordCount":66354,"updatedAt":"2012-02-09"},{"id":152,"title":"Aphid Species File","titleShort":"Aphid Species File","description":"This file contains taxon names and related nomenclatural information for the infraorder Aphidomorpha, including aphids and their relatives, originating from Aphid Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","curation":"NotCurated","hasTaxonData":true,"recordCount":11331,"updatedAt":"2012-02-09"},{"id":153,"title":"The National Checklist of Taiwan","titleShort":"The National Checklist of Taiwan","description":"The catalog of Taiwanese species is call \"TaiBNET\" and the national node of GBIF (Global Biodiversity Information Facility) in Taiwan is called \"TaiBIF\". Currently, the websites have been established at Academia Sinica (http://taibnet.sinica.edu.tw and http://www.gbif.org.tw). Both of the Biodiversity Research Center and the Computing Center of Academia Sinica are in charge of the maintenance and the updating biodiversity related information and data.\n\nThrough the node, the background of participating GBIF, related documents, news, upcoming conferences, name list of Taiwanese taxonomists, catalog of life in Taiwan, specimen database, biodiversity related organization, team research projects, independent biological databases, natural heritage, and local publications etc. can be accessed. Among them, \"Name list of Taiwanese taxonomists\" and \"Catalog of Life of Taiwan\" are one promoting project sponsored by the National Science Council. So far, 236 local taxonomists have included their titles, telephones, e-mail addresses, and the taxa that they are expertised. In the future, we hope to include all of the ecologists or the applied scientists in agriculture, forestry, fishery, and animal husbandry in the name list.\n\nThe first phase of Catalog of Life in Taiwan will contain the following items of animals (including insects), plants, and fungi: species names, authors and year, suggested Chinese names, endemic in Taiwan or not, their classification hierarchy, the most authorized citation proving that particular species has occurred in Taiwan. Users can get the name list of one group of organisms through keywords search, species name searching, or image searching etc. Further information of each species can be obtained through the hyperlink to more than 18 well-known global databases or networks, such as Species2000 and ITIS etc. Right now, more than 30,000 species have been compiled, and we hope to collect more than 60,000 species by July 2004. Species checklist of the microorganisms will be included next year. We hope to get more funding and collaborators in the next phase to collect specimen or ecological photos (endemic species first), description (morphology, ecology and biology), geographical distribution, synonyms, literatures, as well as deposited specimen data for each species.\n\nThrough this node, the most authorized information of high biodiversity and endemism of Taiwan can be exchanged and shared with other GBIF participants. This mission is also requested by both of the Convention on Biological Diversity and GBIF to each member because in such a way, education, research, and conservation of biodiversity in the world could be promoted effectively.","curation":"NotCurated","hasTaxonData":false,"recordCount":52611,"updatedAt":"2012-02-09"},{"id":154,"title":"Psocodea Species File","titleShort":"Psocodea Species File","description":"This file contains taxon names and related nomenclatural information for the order Psocodea originating from the Psocodea Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","curation":"NotCurated","hasTaxonData":true,"recordCount":7517,"updatedAt":"2012-02-09"},{"id":155,"uuid":"bacd21f0-44e0-43e2-914c-70929916f257","title":"FishBase","titleShort":"FishBase","description":"FishBase, a  global information system with all you ever wanted to know about fishes. FishBase is a relational database with information to cater to different professionals such as research scientists, fisheries managers, zoologists and many more.","homeURL":"https://www.fishbase.in/home.htm","curation":"Curated","hasTaxonData":false,"recordCount":88919,"updatedAt":"2012-02-09"},{"id":156,"title":"3i - Typhlocybinae Database","titleShort":"3i - Typhlocybinae Database","description":"World Typhlocybinae database","curation":"NotCurated","hasTaxonData":true,"recordCount":14272,"updatedAt":"2012-02-09"},{"id":157,"title":"Belgian Species List","titleShort":"Belgian Species List","description":"This resource was created by publishing the backend database of the Belgian Species List website (www.species.be). This publishing work has been done by the Belgian Biodiversity Platform (http://www.biodiversity.be) in the framework of the \"GBIF award for evaluating checklist publication format\" during May 2011.\n\nData extracted by Francis Strobbe on May 27th 2011.\n\nAbstract of the Belgian Species List project:\nSince almost a year now, people of all ages can access the Belgian Species List for an extensive overview of the biodiversity in Belgium. Animals, plants, fungi: you can make your way through a total of more than 32.000 species!\n\nThe Belgian species list was set up by the RBINS – the research institution behind the Museum of Natural Sciences – in cooperation with different Belgian and international institutions and organizations.\n\nThe purpose of the species list is to become the online reference in naming and occurrence of species in Belgium, easy to consult in just one website that centralizes and standardizes the information. For every species that's been described, information is given on among other things the conservation status, the distribution, the habitat and much more. More and more species index cards are fitted with pictures and interesting links.\n\nThe website is aimed at a broad audience: researchers, decision makers, students, journalists, nature conversationists and all nature lovers.\n\nWant to know more? \nLog on to www.species.be!","curation":"NotCurated","hasTaxonData":true,"recordCount":59439,"updatedAt":"2012-02-09"},{"id":158,"title":"European Nature Information System","titleShort":"EUNIS","description":"Find species, habitat types and protected sites across Europe ","homeURL":"https://eunis.eea.europa.eu/","isOutlinkReady":true,"curation":"AutoCurated","hasTaxonData":true,"recordCount":337599,"updatedAt":"2022-08-31"},{"id":159,"title":"CU*STAR","titleShort":"CU*STAR","description":"CU*STAR is the indexing backbone to the star websites for biology - such as micro*scope.","curation":"NotCurated","hasTaxonData":false,"recordCount":516269,"updatedAt":"2012-02-09"},{"id":161,"title":"Orthoptera Species File","titleShort":"Orthoptera Species File","description":"This file contains taxon names and related nomenclatural information for the order Orthoptera originating from the Orthoptera Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","curation":"NotCurated","hasTaxonData":true,"recordCount":42094,"updatedAt":"2012-02-09"},{"id":162,"title":"Bishop Museum","titleShort":"Bishop Museum","description":"Bishop Museum Taxonomic Database","curation":"NotCurated","hasTaxonData":false,"recordCount":301496,"updatedAt":"2012-02-09"},{"id":163,"title":"IUCN Red List of Threatened Species","titleShort":"IUCN Red List of Threatened Species","description":"The IUCN Red List of Threatened Species™ is widely recognized as the most comprehensive, objective global approach for evaluating the conservation status of plant and animal species. From its small beginning, the IUCN Red List has grown in size and complexity and now plays an increasingly prominent role in guiding conservation activities of governments, NGOs and scientific institutions. The introduction in 1994 of a scientifically rigorous approach to determine risks of extinction that is applicable to all species, has become a world standard. In order to produce the IUCN Red List of Threatened Species™, the IUCN Species Programme working with the IUCN Survival Commission (SSC) and with members of IUCN draws on and mobilizes a network of scientists and partner organizations working in almost every country in the world, who collectively hold what is likely the most complete scientific knowledge base on the biology and conservation status of species.","curation":"Curated","hasTaxonData":true,"recordCount":81672,"updatedAt":"2012-02-09"},{"id":164,"title":"BioLib.cz","titleShort":"BioLib.cz","description":"BioLib is an international encyclopedia of plants, fungi and animals.","curation":"NotCurated","hasTaxonData":false,"recordCount":974691,"updatedAt":"2012-02-09"},{"id":165,"title":"Tropicos - Missouri Botanical Garden","titleShort":"Tropicos","description":"The Tropicos database links over 1.33M scientific names with over 4.87M specimens and over 685K digital images. The data includes over 150K references from over 52.6K publications offered as a free service to the world’s scientific community.","isOutlinkReady":true,"curation":"Curated","hasTaxonData":false,"recordCount":1368229,"updatedAt":"2021-11-12"},{"id":166,"title":"nlbif","titleShort":"nlbif","description":"NLBIF is the Dutch Node of the Global Biodiversity Information Facility network.","curation":"NotCurated","hasTaxonData":false,"recordCount":1264100,"updatedAt":"2012-02-09"},{"id":167,"uuid":"6b3905ce-5025-49f3-9697-ddd5bdfb4ff0","title":"The International Plant Names Index","titleShort":"IPNI","version":"2025-05-23","description":"The International Plant Names Index (IPNI) is a database of the names and associated basic bibliographical details of seed plants, ferns and lycophytes. Its goal is to eliminate the need for repeated reference to primary sources for basic bibliographic information about plant names. The data are freely available and are gradually being standardized and checked. IPNI will be a dynamic resource, depending on direct contributions by all members of the botanical community.","homeURL":"https://www.ipni.org/","isOutlinkReady":true,"curation":"Curated","hasTaxonData":false,"recordCount":1886250,"updatedAt":"2025-05-23"},{"id":168,"uuid":"1137dfa3-5b8c-487d-b497-dc0938605864","title":"Index to Organism Names","titleShort":"ION","description":"ION contains millions of animal names, both fossil and recent, at all taxonomic ranks, reported from the scientific literature. (Bacteria, plant and virus names will be added soon).\n\nThese names are derived from premier Clarivate databases: Zoological Record®, BIOSIS Previews®, and Biological Abstracts®. All names are tied to at least one published article. Together, these resources cover every aspect of the life sciences - providing names from over 30 million scientific records, including approximately ,000 international journals, patents, books, and conference proceedings. They provide a powerful foundation for the most complete collection of organism names available today.","homeURL":"http://organismnames.com/","isOutlinkReady":true,"curation":"NotCurated","hasTaxonData":false,"recordCount":5309468,"updatedAt":"2023-03-07"},{"id":169,"title":"uBio NameBank","titleShort":"uBio NameBank","description":"uBio uses names and taxonomic intelligence to manage information about organisms.","curation":"NotCurated","hasTaxonData":false,"recordCount":10004817,"updatedAt":"2013-05-31"},{"id":170,"uuid":"eea8315d-a244-4625-859a-226675622312","title":"Arctos","titleShort":"Arctos","version":"2025-05-23","description":"Arctos is an ongoing effort to integrate access to specimen data, collection-management tools, and external resources on the internet.","homeURL":"https://arctosdb.org/","isOutlinkReady":true,"curation":"AutoCurated","hasTaxonData":true,"recordCount":3189783,"updatedAt":"2025-05-23"},{"id":171,"title":"Checklist of Beetles (Coleoptera) of Canada and Alaska. Second Edition.","titleShort":"Checklist of Beetles (Coleoptera) of Cana...","description":"All 8238 species-group taxa of Coleoptera known to occur in Canada and Alaska are recorded by province/territory or state, along with their author(s) and year of publication, in a classification framework. Only presence of taxa in each Canadian province or territory and Alaska is noted. Labrador is considered a distinct geographical entity. Adventive and Holarctic species-group taxa are indicated. References to pertinent identification keys are given under the corresponding supraspecific taxa.","curation":"NotCurated","hasTaxonData":false,"recordCount":12125,"updatedAt":"2014-03-11"},{"id":172,"uuid":"fad9970e-c358-4e1b-8cc3-f9ad2582751f","title":"The Paleobiology Database","titleShort":"PaleoBioDB","description":"The Paleobiology Database is a public database of paleontological data that anyone can use, \nmaintained by an international non-governmental group of paleontologists.\n  \nFossil occurrences from scientific publications are added to the database by our contributing members. \nThanks to our membership, which includes nearly 400 scientists from over 130 institutions in 24 countries, \nthe Paleobiology Database is able to provide scientists and the public with information about the fossil record.\n","homeURL":"https://paleobiodb.org/#/","curation":"Curated","hasTaxonData":true,"recordCount":397255,"updatedAt":"2025-05-21"},{"id":173,"uuid":"c24e0905-4980-4e1d-aff2-ee0ef54ea1f8","title":"The Reptile Database","titleShort":"The Reptile DataBase","description":"This database provides a catalogue of all living reptile species and their classification. The database covers all living snakes, lizards, turtles, amphisbaenians, tuataras, and crocodiles. Currently there are about 9,500 species including another 2,800 subspecies (statistics). The database focuses on taxonomic data, i.e. names and synonyms, distribution and type data and literature references.","homeURL":"http://reptile-database.org/","curation":"Curated","hasTaxonData":false,"recordCount":13890,"updatedAt":"2014-12-08"},{"id":174,"uuid":"464dafec-1037-432d-8449-c0b309e0a030","title":"The Mammal Species of The World","titleShort":"Mammal Species of the World","description":"Mammal Species of the World, 3rd edition (MSW3) is a database of mammalian taxonomy, based upon the 2005 book Mammal Species of the World. A Taxonomic and Geographic Reference (3rd ed). Don E. Wilson \u0026 DeeAnn M. Reeder (editors).","homeURL":"https://www.departments.bucknell.edu/biology/resources/msw3/","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":33993,"updatedAt":"2018-08-04"},{"id":175,"uuid":"b1d8de7a-ab96-455f-acd8-f3fff2d7d169","title":"BirdLife International","titleShort":"BirdLife International","description":"BirdLife is widely recognised as the world leader in bird conservation. Rigorous science informed by practical feedback from projects on the ground in important sites and habitats enables us to implement successful conservation programmes for birds and all nature.","homeURL":"http://www.birdlife.org/","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":13785,"updatedAt":"2014-12-10"},{"id":176,"title":"Checklist da Flora de Portugal (Continental, Açores e Madeira)","titleShort":"Checklist da Flora de Portugal (Continent...","description":"The checklist of vascular plants of Portugal, including Mainland Portugal, Azores and Madeira, was published in 2012 by ALFA (Associação Lusitana de Fitossociologia), and adopted formally by the Instituto de Conservação da Natureza e da Biodiversidade (presently ICNF). The checklist covers Continental Portugal, Azores and Madeira. It includes a total of 3995 taxa (including infraspecific taxa), of which 3314 are for Mainland Portugal, 1006 for Azores and 1233 for Madeira. These taxa are distributed among 185 families and 1066 genera. The checklist also includes establishment means, identifying native, introduced of endemic taxa.","curation":"Curated","hasTaxonData":false,"recordCount":3994,"updatedAt":"2015-03-03"},{"id":177,"title":"FishBase Cache","titleShort":"FishBase Cache","description":"FishBase is a global species database of fish species(specifically finfish). It is the largest and the mostextensively accessed online database of finfish","curation":"Curated","hasTaxonData":false,"recordCount":95764,"updatedAt":"2019-11-08"},{"id":178,"title":"Silva","titleShort":"Silva","description":"High quality ribosomal RNA databases","curation":"NotCurated","hasTaxonData":false,"recordCount":0,"updatedAt":"2016-10-18"},{"id":179,"uuid":"e10865e2-cdd9-4f97-912f-08f3d5ef49f7","title":"Open Tree of Life Reference Taxonomy","titleShort":"Open Tree of Life","description":"Open Tree of Life aims to construct a comprehensive, dynamic and digitally-available tree of life by synthesizing published phylogenetic trees along withtaxonomic data. The project is a collaborative effortbetween 11 PIs across 10 institutions.","homeURL":"https://tree.opentreeoflife.org/","curation":"AutoCurated","hasTaxonData":false,"recordCount":4528127,"updatedAt":"2021-07-05"},{"id":180,"uuid":"e26d2a88-0f46-40c1-8cf4-997274e3a495","title":"\n      iNaturalist Taxonomy\n    ","titleShort":"iNaturalist","version":"2025-05-01","description":"\n        Taxonomy from iNaturalist.org, an online social network of people sharing biodiversity information to help each other learn about nature.\n      ","homeURL":"https://inaturalist.org/","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":1359661,"updatedAt":"2025-05-15"},{"id":181,"uuid":"417454fa-a0a1-4b9c-814d-edc0f4f25ad8","title":"The Interim Register of Marine and Nonmarine Genera","titleShort":"IRMNG","version":"2025-07-11","description":"The Interim Register of Marine and Nonmarine Genera is a provisional (or ‘interim’) compilation of genus names – including species names in many cases – and covers both living and extinct biota into a single system to support taxonomic and other queries dealing with e.g. homonyms, authorities, parent-child relationships, spelling variations and distinctions between marine and non-marine or fossil and recent taxa","homeURL":"https://irmng.org/","curation":"Curated","hasTaxonData":true,"recordCount":545974,"updatedAt":"2025-08-21"},{"id":182,"title":"Gymno","titleShort":"Gymno","description":"This classification is primarily focused on Gymnodinium, a genus of dinoflagellate. I tried to include all Gymnodinium name strings (even invalid names and lexical variants).","curation":"NotCurated","hasTaxonData":true,"recordCount":488,"updatedAt":"2019-11-12"},{"id":183,"uuid":"05ad6ca2-fc37-47f4-983a-72e535420e28","title":"Index Animalium by Charles Davies Sherborn","titleShort":"Sherborn Index Animalium","description":"Index Animalium is a monumental work that covers 400 000 zoological names registered by science between 1758 and 1850","homeURL":"https://www.sil.si.edu/DigitalCollections/indexanimalium/taxonomicnames/","isOutlinkReady":true,"curation":"Curated","hasTaxonData":false,"recordCount":373149,"updatedAt":"2023-05-01"},{"id":184,"uuid":"94270cdd-5424-4bb1-8324-46ccc5386dc7","title":"ASM Mammal Diversity Database","titleShort":"ASM Mammal Diversity DB","description":"Mammal Diversity Database. 2021. www.mammaldiversity.org. American Society of Mammalogists. Accessed 2021-01-28.","homeURL":"https://mammaldiversity.org/","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":8921,"updatedAt":"2021-07-05"},{"id":185,"uuid":"6421ffec-38e3-40fb-a6d9-af27238a47a1","title":"IOC World Bird List","titleShort":"IOC World Bird List","version":"v 15.1","releaseDate":"2025-05-27","doi":"10.14344/IOC.ML.15.1","description":"The IOC World Bird List is an open access resource of the international community of ornithologists. Our primary goal is to facilitate worldwide communication in ornithology and conservation based on an up-to-date evolutionary classification of world birds and a set of English names that follow explicit guidelines for spelling and construction.","homeURL":"https://www.worldbirdnames.org/","curation":"Curated","hasTaxonData":false,"recordCount":33724,"updatedAt":"2025-05-28"},{"id":186,"uuid":"c79d055b-211b-40de-8e27-618011656265","title":"MCZbase","titleShort":"MCZbase","description":"The Museum of Comparative Zoology was founded in 1859 on the concept that collections are an integral and fundamental component of zoological research and teaching. This more than 150-year-old commitment remains a strong and proud tradition for the MCZ. The present-day MCZ contains over 21-million specimens in ten research collections which comprise one of the world's richest and most varied resources for studying the diversity of life. The museum serves as the primary repository for zoological specimens collected by past and present Harvard faculty-curators, staff and associates conducting research around the world. As a premier university museum and research institution, the specimens and their related data are available to researchers of the scientific and museum community. doi:10.5281/zenodo.891420","homeURL":"https://mczbase.mcz.harvard.edu/","isOutlinkReady":true,"curation":"AutoCurated","hasTaxonData":false,"recordCount":272997,"updatedAt":"2023-03-06"},{"id":187,"uuid":"577c0b56-4a3c-4314-8724-14b304f601de","title":"The eBird/Clements Checklist of Birds of the World","titleShort":"Clements' Birds of the World","description":"The eBird/Clements Checklist of Birds of the World: v2019. Downloaded from https://www.birds.cornell.edu/clementschecklist/download/","homeURL":"https://www.birds.cornell.edu/clementschecklist/","curation":"Curated","hasTaxonData":false,"recordCount":32610,"updatedAt":"2021-12-12"},{"id":188,"uuid":"91d38806-8435-479f-a18d-705e5cb0767c","title":"American Ornithological Society","titleShort":"American Ornithological Society","description":"The American Ornithological Society's (AOS) Checklist is the official source on the taxonomy of birds found in North and Middle America, including adjacent islands. This list is produced by the North American Classification and Nomenclature Committee (NACC) of the AOS.\n\nRecommended citation: Chesser, R. T., K. J. Burns, C. Cicero, J. L. Dunn, A. W. Kratter, I. J. Lovette, P. C. Rasmussen, J. V. Remsen, Jr., D. F. Stotz, and K. Winker. 2019. Check-list of North American Birds (online). American Ornithological Society. http://checklist.aou.org/taxa","homeURL":"https://americanornithology.org/","isOutlinkReady":true,"curation":"Curated","hasTaxonData":false,"recordCount":2154,"updatedAt":"2020-05-30"},{"id":189,"uuid":"85023fe5-bf2a-486b-bdae-3e61cefd41fd","title":"Howard and Moore Complete Checklist of the Birds of the World","titleShort":"Howard \u0026 Moore Birds of the World","description":"Christidis et al. 2018. The Howard and Moore Complete Checklist of the Birds of the World, version 4.1 (Downloadable checklist). Accessed from https://www.howardandmoore.org.","homeURL":"https://www.howardandmoore.org/","curation":"Curated","hasTaxonData":false,"recordCount":26194,"updatedAt":"2020-05-31"},{"id":193,"title":"Myriatrix","titleShort":"Myriatrix","description":"Myriatrix is a Scratchpads-based Virtual Research Environment proposed to the International Society of Myriapodology. It allows collaborative editing and linking of the classification, literature, and morphological traits of the many-legged terrestrial invertebrate groups Onychophora and Myriapoda (to the inclusion of Euthycarcinoidea). The taxonomic backbone is based on the Species 2000 \u0026 ITIS Catalogue of Life (2015 release). The literature database contains circa 1300 references, spanning from 1535 to present. This dataset represents the output of an ongoing endeavor, and therefore is periodically updated. For more information, please see http://myriatrix.myspecies.info/ and the original database proposal on https://www.researchgate.net/publication/337844165\n\n\n\nHow to cite:\n\nThe Fellegship of the Rings (2020 onwards): Myriatrix. Available from http://myriatrix.myspecies.info","homeURL":"http://myriatrix.myspecies.info","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":32466,"updatedAt":"2023-03-06"},{"id":194,"uuid":"68938dc9-b93d-43bc-9d51-5c2a632f136f","title":"PLAZI treatments","titleShort":"Plazi","version":"2025-05-23","description":"Plazi is an association supporting and promoting the development of persistent and openly accessible digital taxonomic literature. ","homeURL":"https://www.plazi.org/","isOutlinkReady":true,"curation":"AutoCurated","hasTaxonData":false,"recordCount":1009248,"updatedAt":"2025-05-23"},{"id":195,"uuid":"a5869bfb-7cbf-40f2-88d3-962922dac43f","title":"AlgaeBase","titleShort":"AlgaeBase","description":"AlgaeBase is a global algal database of taxonomic, nomenclatural and distributional information.","homeURL":"https://www.algaebase.org/","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":163803,"updatedAt":"2021-10-21"},{"id":196,"uuid":"39e7b959-9b16-460c-a77f-71934b7098e0","title":"World Flora Online Plant List 2025-06","titleShort":"World Flora Online","version":"2025-06-21","releaseDate":"2025-06-21","doi":"10.5281/zenodo.7460141","description":"The consensus taxonomy of plants used as the backbone for the World Flora Online (WFO, https://www.worldfloraonline.org/) portal, and issued as editions of the WFO Plant List (https://wfoplantlist.org). New versions of this checklist are released every six months in June and December: this is release 2025-06. The history of data development for the WFO taxonomic backbone is given on the WFO Plant List background page (https://wfoplantlist.org/background). Taxonomic names are incorporated into WFO from nomenclators International Plant Name Index (IPNI, https://www.ipni.org/) for vascular plants, and Tropicos (https://www.tropicos.org/home) for bryophytes. Taxonomic and nomenclatural updates are incorporated from the WFO's Taxonomic Expert Networks (TENs, https://about.worldfloraonline.org/tens) and the World Checklist of Vascular Plants (WCVP, https://powo.science.kew.org/about-wcvp), facilitated by the Royal Botanic Gardens, Kew.","homeURL":"https://worldfloraonline.org","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":1648360,"updatedAt":"2025-08-21"},{"id":197,"uuid":"814d1a77-2234-449b-af4a-138e0e1b1326","title":"The World Checklist of Vascular Plants","titleShort":"World Checklist of Vascular Plants","version":"2024-10-06","description":"The World Checklist of Vascular Plants (WCVP) is a comprehensive list of scientifically described plant species, compiled over four decades, from peer-reviewed literature, authoritative scientific databases, herbaria and observations, then reviewed by experts.","homeURL":"https://wcvp.science.kew.org/","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":1431675,"updatedAt":"2024-10-08"},{"id":198,"uuid":"75fb6846-4c37-4b45-a2ab-05dc0124957b","title":"The Leipzig Catalogue of Vascular Plants","titleShort":"Leipzig Cat. Vasc. Plants","description":"LCVP, The Leipzig catalogue of vascular plants, a new taxonomic reference list for all known vascular plants","homeURL":"https://github.com/idiv-biodiversity/LCVP","curation":"NotCurated","hasTaxonData":true,"recordCount":1316062,"updatedAt":"2021-12-30"},{"id":200,"uuid":"75886826-50f9-4513-916d-3ab4875cb063","title":"The Terrestrial Parasite Tracker","titleShort":"Terrestrial Parasite Tracker","description":"The goal of the Terrestrial Parasite Tracker (TPT) project is to mobilize and digitally capture vector and parasite collections to help build a picture of parasite host-association evolution, distributions, and the ecological interactions of disease vectors which will assist scientists, educators, land managers, and policy makers.","homeURL":"https://github.com/njdowdy/tpt-taxonomy","curation":"NotCurated","hasTaxonData":false,"recordCount":102027,"updatedAt":"2022-02-14"},{"id":201,"uuid":"e090da49-8feb-4e03-aff6-a0aa50c4dc37","title":"ICTV Virus Taxonomy","titleShort":"ICTV Virus Taxonomy","description":"The ICTV was created as a committee of the Virology Division of the International Union of Microbiological Societies (IUMS) and is governed by Statutes approved by the Virology Division.","homeURL":"https://talk.ictvonline.org/taxonomy","isOutlinkReady":true,"curation":"Curated","hasTaxonData":false,"recordCount":9110,"updatedAt":"2022-02-14"},{"id":202,"uuid":"7911b6d6-9029-496f-b3a7-7e233199c1d7","title":"Discover Life Bee Species Guide","titleShort":"Discover Life Bees","description":"Discover Life bee species guide and world checklist.","homeURL":"http://www.discoverlife.org/mp/20q?act=x_checklist\u0026guide=Apoidea_species","curation":"NotCurated","hasTaxonData":true,"recordCount":49264,"updatedAt":"2022-02-18"},{"id":203,"uuid":"b0ac4f6f-fc56-41b4-ad69-6af30a881e7e","title":"MycoBank","titleShort":"MycoBank","version":"2025-01-31","description":"MycoBank is an on-line database aimed as a service to the mycological and scientific community by documenting mycological nomenclatural novelties (new names and combinations) and associated data. Westerijk Fungal Biodiversity Institute.","homeURL":"https://www.mycobank.org","isOutlinkReady":true,"curation":"Curated","hasTaxonData":false,"recordCount":537508,"updatedAt":"2025-02-04"},{"id":204,"uuid":"4b373ccd-2f47-4c43-81c3-c2402360fd43","title":"Fungal Names","titleShort":"Fungal Names","description":"Fungal Names, a global data repository of fungal taxonomy, is established by the Institute of Microbiology, Chinese Academy of Sciences. The repository aims at providing integrated services on Fungi and fungus-like organisms involving fungal name registration, species identification, specimen preservation, taxonomists overview and related information query, statistics or data sharing for people worked with or interested in mycology.\n\nFang Wang, Ke Wang, Lei Cai, Mingjun Zhao, Paul M Kirk, Guomei Fan, Qinglan Sun, Bo Li, Shuai Wang, Zhengfei Yu, Dong Han, Juncai Ma, Linhuan Wu*, Yijian Yao*, Fungal names: a comprehensive nomenclatural repository and knowledge base for fungal taxonomy, Nucleic Acids Research, 2022, gkac926, https://doi.org/10.1093/nar/gkac926","homeURL":"https://nmdc.cn/fungalnames","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":587101,"updatedAt":"2023-03-03"},{"id":205,"uuid":"02fd9b10-78e4-43a5-889e-0639a771c576","title":"Nomenclator Zoologicus","titleShort":"Nomenclator Zoologicus","description":"Nomenclator Zoologicus is a catalog of the bibliographic origins of the names of every genus and subgenus in the published literature since the tenth edition of Linnaeus' System Natureae in 1758 (Linnæus, 1758) up to 1994. An estimated 340,000 genera are represented in the text and there are approximately 3000 supplemental corrections. It provides a nucleus of core genera data and is recognized as an essential reference document by the zoological taxonomic community.","homeURL":"https://doi.org/10.5281/zenodo.7010676","curation":"Curated","hasTaxonData":false,"recordCount":343145,"updatedAt":"2023-05-01"},{"id":206,"uuid":"5413758a-7fd8-4db9-b06b-f780f8688f2a","title":"Ruhoff 1980","titleShort":"Ruhoff 1980","description":"Index to the species of Mollusca introduced from 1850 to 1870","homeURL":"https://doi.org/10.5479/si.00810282.294","curation":"AutoCurated","hasTaxonData":false,"recordCount":35487,"updatedAt":"2023-08-22"},{"id":207,"uuid":"f972c3e7-9da8-48d1-aa00-5c6c56c24614","title":"Wikidata","titleShort":"Wikidata","description":"Wikidata is a collaboratively edited multilingual knowledge graph hosted by the Wikimedia Foundation. It is a common source of open data that Wikimedia projects such as Wikipedia, and anyone else, can use under the CC0 public domain license. Wikidata is a wiki powered by the software MediaWiki, including its extension for semi-structured data, the Wikibase.","homeURL":"https://wikidata.org","isOutlinkReady":true,"curation":"AutoCurated","hasTaxonData":false,"recordCount":3476003,"updatedAt":"2023-10-09"},{"id":208,"uuid":"3d10ba04-be3a-4617-b9d5-07f1ae5ac195","title":"List of Prokaryotic names with Standing in Nomenclature","titleShort":"LPSN","version":"2025-02-02","description":"The List of Prokaryotic names with Standing in Nomenclature (LPSN) provides comprehensive information on the nomenclature of prokaryotes and much more.LPSN is a free to use service founded by Jean P. Euzéby in 1997 and later on maintained by Aidan C. Parte.","homeURL":"https://lpsn.dsmz.de/","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":25901,"updatedAt":"2025-02-04"},{"id":209,"uuid":"365ee637-7189-4551-a52a-74aa79d3ee2f","title":"New Zealand Organizm Register","titleShort":"NZOR","version":"2025-02-02","description":"NZOR is an actively maintained compilation of all organism names relevant to New Zealand: indigenous, endemic or exotic species or species not present in New Zealand but of national interest. NZOR is digitally and automatically assembled from a number of taxonomic data providers. It provides a consensus opinion on the preferred name for an organism, any alternative scientific names (synonyms), common and Māori names, relevant literature, and the data provider’s view on the documented presence/absence in New Zealand.","homeURL":"https://www.nzor.org.nz/","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":122415,"updatedAt":"2025-02-04"},{"id":210,"uuid":"af653502-d8be-4438-bdd0-d455067473ac","title":"TAXREF","titleShort":"TAXREF","version":"2025-03-10","description":"TAXREF est le référentiel taxonomique national pour la faune, la flore et la fonge de France \nmétropolitaine et d’outre-mer, élaboré et diffusé par le Muséum national d’Histoire naturelle \n(MNHN) dans le cadre de la mise en œuvre du Système d’Information de l'inventaire National du Patrimoine naturel (SINP). Ce référentiel est unique pour la France ; il a pour but de lister et \nd’organiser les noms scientifiques de l'ensemble des êtres vivants recensés sur le territoire. Le \nréférentiel TAXREF est consultable et téléchargeable sur le site internet de l’Inventaire \nNational du Patrimoine Naturel (INPN) coordonné par le MNHN. \nhttp://inpn.mnhn.fr/programme/referentiel-taxonomique-taxref\n \nLa version en cours est TAXREF v18.0 mise en ligne le 09 janvier 2025.\n\nEn téléchargeant TAXREF, j'accepte les conditions suivantes :\n(1) aucune copie du référentiel TAXREF ne sera faite et transmise à un tiers sans que celui-ci n'ait rempli le présent formulaire \n(2) le référentiel TAXREF, ou une de ses composantes telles que décrites dans le document de citation des sources, sera citée dans toute publication ou présentation qui l'utilisera \n(3) aucune partie du référentiel TAXREF ne sera mise à disposition en ligne sans autorisation préalable de l'UMS Patrimoine Naturel \n(4) en cas de découverte d'erreurs il est prié de bien vouloir en informer les éditeurs de façon à constamment accroitre la qualité du référentiel","homeURL":"https://inpn.mnhn.fr/programme/referentiel-taxonomique-taxref","curation":"Curated","hasTaxonData":true,"recordCount":708685,"updatedAt":"2025-04-02"},{"id":211,"uuid":"11b81e30-5b08-4615-9c4c-65d92701f152","title":"Synonymic Checklists of the Vascular Plants of the World","titleShort":"WorldPlants","version":"2025-03-31","description":"WorldFerns and WorldPlants are synonymic checklists of the vascular plants of the world (including ferns and lycophytes). The data set has been compiled – independently from other catalogues - over the last 40 years by starting from the basic data of the Kew Index and the Index Filicum. These names (initially over 1 million) have been subsequently cross-checked against local or regional floras, checklists, monographies and treatments. Large subsets of the database have been cross-checked by experts for certain groups. In the current status almost all names have been verified, and distribution data, newer checklists and/or floras are available for almost all countries and regions. Over the years, about 400,000 names have been added to the basic subset, leading to a total of 1,380,000 names for all families. Only a small subset (about 50,000 names) of mostly old, unverified and unassignable (“unplaced”) names have been deliberately omitted. Newly described taxa are added on a regular basis through data exchange with IPNI. Special attention is given to arranging the genera in correct phylogenetic sequence, by inclusion of the most important phylogenetic papers and monographies. The linear sequence of genera can be seen on the original website worldplants.de.\n\nAs of 2023, almost all countries and regions have recent checklists or floras of reasonable quality and completeness, and over 90 % of geographical distribution is probably known. Some remaining large gaps have been closed by the recent completion of checklists for Brazil and India. Remaining regions with some data deficiencies are parts of Malesia and Central Africa (the two Congos), and for some states of former Yugoslavia the distribution is not yet fully broken down.","homeURL":"https://www.worldplants.de","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":1356352,"updatedAt":"2025-05-28"},{"id":212,"uuid":"26213d36-01ad-4154-98c8-51ee14da1f24","title":"Checklist of Ferns and Lycophytes of the World","titleShort":"WorldFerns","version":"2025-03-31","description":"WorldFerns and WorldPlants are synonymic checklists of the vascular plants of the world (including ferns and lycophytes). The data set has been compiled – independently from other catalogues - over the last 40 years by starting from the basic data of the Kew Index and the Index Filicum. These names (initially over 1 million) have been subsequently cross-checked against local or regional floras, checklists, monographies and treatments. Large subsets of the database have been cross-checked by experts for certain groups. In the current status almost all names have been verified, and distribution data, newer checklists and/or floras are available for almost all countries and regions. Over the years, about 400,000 names have been added to the basic subset, leading to a total of 1,380,000 names for all families. Only a small subset (about 50,000 names) of mostly old, unverified and unassignable (“unplaced”) names have been deliberately omitted. Newly described taxa are added on a regular basis through data exchange with IPNI. Special attention is given to arranging the genera in correct phylogenetic sequence, by inclusion of the most important phylogenetic papers and monographies. The linear sequence of genera can be seen on the original website worldplants.de.\n\nAs of 2023, almost all countries and regions have recent checklists or floras of reasonable quality and completeness, and over 90 % of geographical distribution is probably known. Some remaining large gaps have been closed by the recent completion of checklists for Brazil and India. Remaining regions with some data deficiencies are parts of Malesia and Central Africa (the two Congos), and for some states of former Yugoslavia the distribution is not yet fully broken down.\n\nWorldFerns is proud to be the main data source for the new Pteridophyte Phylogeny Group initiative “PPG-II”, starting 2023. Results from this continuing revision of the WorldFerns catalogue by almost 300 experts worldwide are subsequently back-integrated in the existing dataset and almost immediately available.","homeURL":"https://www.worldplants.de","isOutlinkReady":true,"curation":"Curated","hasTaxonData":true,"recordCount":69794,"updatedAt":"2025-05-28"},{"id":213,"uuid":"aad1c3c2-c8ba-4e28-afa7-0a9742b0326e","title":"Flora e Funga do Brasil - Lista Oficial","titleShort":"Brasilian Flora","version":"2025-08-22","description":"In 2010, Brazil met Target 1 established by the Global Strategy for Plant Conservation (GSPC-CDB), within the scope of the Convention on Biological Diversity, with the publication of the “Catálogo de Plantas e Fungos do Brasil” (see above “Publications/References”) and with the release of the first online version of the “Lista de Espécies da Flora do Brasil”. The “Lista do Brasil” project, as it became popularly known, ended in November 2015, with the publication of five articles and their respective databases (see above in “Access to Data” and “Publications/References”). In early 2016, the “Flora do Brasil 2020” project was launched, aiming to fulfill Target 1 established by the GSPC-CDB for 2020, with morphological descriptions, identification keys and illustrations for all species of plants, algae and fungi known to the country. By the end of 2020, monographs for all families of Bryophytes, Ferns and Lycophytes and Gymnosperms native to Brazil were made available in a broad and unrestricted way, as well as monographs for 90% of Angiosperm families. The results achieved were consequence of the collaborative work of more than 900 taxonomists, Brazilians and foreigners, in an online platform for the inclusion of data from the taxonomic groups of their specialty. In addition to preparing the monographs, these researchers were also responsible for including information on nomenclature (accepted names vs. synonyms) and geographic distribution (by states in Brazil, endemism and Phytogeographic Domains), in addition to including valuable data on life forms, substrate and vegetation types for the species worked. It is important to note that high resolution images of exsiccates, as well as images of species in nature and scientific illustrations are also associated with taxa to aid in their recognition. However, the monographs completed for Algae and for Fungi were not able to cover the real diversity of these groups in Brazil and this was a stimulus for the beginning of this new phase of the project, now called Flora e Funga do Brasil. This change aims to seek a more inclusive biological terminology for the Fungi Kingdom and a greater engagement of the mycological and lichenological community, both for the improvement of the list of species occurring in the country, and for the elaboration of monographs.","homeURL":"http://floradobrasil.jbrj.gov.br/","curation":"Curated","hasTaxonData":true,"recordCount":161402,"updatedAt":"2025-08-22"},{"id":214,"uuid":"8e2c708a-318a-4de6-803d-3bdbfc384ab1","title":"Catálogo Taxonômico da Fauna do Brasil","titleShort":"Brasilian Fauna","version":"2025-08-22","description":"A quick analysis shows that we are far from knowing our fauna in a comprehensive manner. Much work is still necessary for our taxonomists, many inputs will still be entered into the system. We hope that the CTFB, therefore, represents a facilitator and induces further studies to describe more effectively the animal diversity in Brazil.","homeURL":"http://fauna.jbrj.gov.br/","curation":"Curated","hasTaxonData":true,"recordCount":187910,"updatedAt":"2025-08-22"}]

  recorded_at: Wed, 22 Oct 2025 19:23:37 GMT
recorded_with: VCR 6.3.1
